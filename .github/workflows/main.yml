name: PR check

on:
  pull_request:
    types:
      - opened
      - edited

jobs:
  Audit-the-json-content:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR is from a fork
        id: pr_source
        run: |
          if [[ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
            echo "PR is from a fork."
            echo "::set-output name=is_fork::true"
          else
            echo "PR is not from a fork."
            echo "::set-output name=is_fork::false"
          fi

      - name: Checkout the PR
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: ${{ steps.pr_source.outputs.is_fork != 'true' }}
          submodules: ${{ steps.pr_source.outputs.is_fork != 'true' }}

      - name: Fetch base branch for comparison (skip if from fork)
        if: steps.pr_source.outputs.is_fork != 'true'
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Get the list of changed files (skip if from fork)
        id: changes
        run: |
          git diff --name-status origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }} > changes.txt
          cat changes.txt
        if: steps.pr_source.outputs.is_fork != 'true'

      - name: Fail if any file other than pixel_update.json is added/removed/modified
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }})
          TOTAL_FILES=$(echo "$CHANGED_FILES" | wc -l)
          
          # Check if only 'pixel_update.json' was modified
          if [[ "$TOTAL_FILES" -eq 1 ]] && [[ "$CHANGED_FILES" == "pixel_update.json" ]]; then
            echo "Only pixel_update.json was modified. Proceeding with validation..."
          else
            echo "Error: Changes found in files other than pixel_update.json. Failing the PR."
            exit 1
          fi
        if: steps.pr_source.outputs.is_fork != 'true'

      - name: Save the content of changed file (pixel_update.json)
        run: |
          cat pixel_update.json > changed_file_content.txt

      - name: Pass the diff and file content to Python validation
        run: |
          python validate_pixel_update.py changes.txt changed_file_content.txt
